{"version":3,"sources":["components/Backdrop/Backdrop.js","components/SideDrawer/HamburgerBtn.js","components/layout/SingInLink.js","store/actions/authActions.js","components/layout/SignOutLink.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectLists.js","components/dashboard/Dashboard.js","components/spinner/Spinner.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProjects.js","containers/App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","config/firebaseConfig.js","index.js"],"names":["backdrop","props","react_default","a","createElement","Fragment","show","onClick","clicked","className","hamburgerBtn","connect","dispatch","onLogOut","getState","_ref2","getFirebase","auth","signOut","then","type","NavLink","to","profileProp","initials","SignOutLink","state","firebase","profile","links","uid","SingInLink","layout_SignOutLink","SideDrawer_HamburgerBtn","hamburgerClicked","Link","sideDrawerClasses","Navbar","sideDrawerOpen","hamburgerClickHandler","_this","setState","prevState","backdropClickHandler","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Backdrop_Backdrop","Component","Notifications","projectNotifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","projects","title","authorFirstName","authorLastName","createdAt","format","ProjectLists","project","projects_ProjectSummary","Dashboard","_this$props","notifications","permit","projects_ProjectLists","dashboard_Notifications","Redirect","compose","firestore","ordered","loading","firestoreConnect","collection","orderBy","limit","spinner","ProjectDetails","deleteProjectHandler","onDelete","match","params","history","push","projectProperty","proDetails","error","spinner_Spinner","ownProps","data","err","getFirestore","doc","delete","res","deleteProjectSuccess","catch","deleteProjectFailed","deleteProject","SignIn","email","password","handleChange","e","Object","defineProperty","target","value","handleSubmit","preventDefault","onSignIn","LogInForm","onSubmit","authErr","htmlFor","onChange","authError","credentials","signInWithEmailAndPassword","loginError","signIn","SignUp","firstName","lastName","onSignUp","signedUp","style","color","newUser","_ref3","createUserWithEmailAndPassword","console","log","set","signUpError","signUp","CreateProject","createProject","createdProject","authorId","add","objectSpread","Date","createProjectSuccess","createProjectError","App","GlobalStyles","createGlobalStyle","_templateObject","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","initialState","authRedirect","authReducer","arguments","length","undefined","action","message","projectReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","useFirestoreForProfile","userProfile","app","BrowserRouter","es","App_App","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mZAceA,UAVE,SAACC,GAEd,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACKJ,EAAMK,KAAOJ,EAAAC,EAAAC,cAAA,OAAKG,QAAUN,EAAMO,QAASC,UAAY,aAAmB,eCMxEC,UAXM,SAACT,GAElB,OACIC,EAAAC,EAAAC,cAAA,UAAQK,UAAY,gBAAgBF,QAAWN,EAAMO,SACjDN,EAAAC,EAAAC,cAAA,OAAKK,UAAY,wBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,wBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,6CCkBdE,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,SAAU,WAAQD,ECmBf,SAACA,EAAUE,EAAXC,IACcC,EAD2BD,EAAlBC,eAEjBC,OAAOC,UACXC,KAAK,WACFP,EAVL,CACHQ,KAAM,2BDVCT,CAnBI,SAACV,GAGhB,OAEIC,EAAAC,EAAAC,cAAA,MAAIK,UAAU,UACVP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAG,mBAAZ,gBACJpB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAG,IAAIf,QAASN,EAAMY,UAA/B,aACJX,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAG,IAAIb,UAAU,mCAAmCR,EAAMsB,YAAYC,cEFhFC,EAXK,WAEhB,OACIvB,EAAAC,EAAAC,cAAA,MAAIK,UAAY,UACZP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAI,WAAb,UACJpB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAI,WAAb,sBCqCDX,cARS,SAACe,GACrB,MAAM,CAEFT,KAAKS,EAAMC,SAASV,KACpBW,QAASF,EAAMC,SAASC,UAIjBjB,CArCC,SAACV,GAAU,IAChB2B,EAAW3B,EAAX2B,QACHC,EAAQ,KASZ,OAPIA,EADD5B,EAAMgB,KAAKa,IAEN5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYR,YAAeK,IAIvB1B,EAAAC,EAAAC,cAAC4B,EAAD,MAGR9B,EAAAC,EAAAC,cAAA,UAAQK,UAAU,WACdP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,0BACbP,EAAAC,EAAAC,cAAC6B,EAAD,CAAczB,QAASP,EAAMiC,oBAEjChC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBAAgBP,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMb,GAAK,KAAX,mBAC/BpB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BAENoB,OCOVlB,sBANS,SAACe,GACrB,MAAO,CACHT,KAAMS,EAAMC,SAASV,KACrBW,QAASF,EAAMC,SAASC,UAGjBjB,CA7BI,SAACV,GAChB,IAAImC,EAAoB,cACpBnC,EAAMK,OACN8B,EAAoB,oBAHE,IAKnBR,EAAW3B,EAAX2B,QACHC,EAAQ,KASZ,OAPIA,EADD5B,EAAMgB,KAAKa,IAEN5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYR,YAAeK,IAIvB1B,EAAAC,EAAAC,cAAC4B,EAAD,MAGR9B,EAAAC,EAAAC,cAAA,OAAKK,UAAW2B,GAEXP,MCfPQ,6MACFX,MAAQ,CACJY,gBAAgB,KAElBC,sBAAwB,WACtBC,EAAKC,SAAS,SAACC,GACb,MAAO,CACLJ,gBAAiBI,EAAUJ,qBAIjCK,qBAAuB,WACrBH,EAAKC,SAAS,CAAEH,gBAAgB,6EAKhC,OACIpC,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,aAEbP,EAAAC,EAAAC,cAACwC,EAAD,CAASV,iBAAoBW,KAAKN,wBAClCrC,EAAAC,EAAAC,cAAC0C,EAAD,CAAYxC,KAAOuC,KAAKnB,MAAMY,iBAC9BpC,EAAAC,EAAAC,cAAC2C,EAAD,CAAUzC,KAAOuC,KAAKnB,MAAMY,eAAgB9B,QAASqC,KAAKF,gCAvBrDK,aAqDNrC,cARS,SAACe,GACrB,MAAM,CAEFT,KAAKS,EAAMC,SAASV,KACpBW,QAASF,EAAMC,SAASC,UAIjBjB,CAA0B0B,oBCjC1BY,EA5BO,SAAChD,GAAU,IACvBiD,EAAyBjD,EAAzBiD,qBACR,OACEhD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,cAAhB,iBACAP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,iBACXyC,GAAwBA,EAAqBC,IAAI,SAAAC,GAChD,OACElD,EAAAC,EAAAC,cAAA,MAAIiD,IAAKD,EAAaE,IACpBpD,EAAAC,EAAAC,cAAA,QAAMK,UAAU,cAAc2C,EAAaG,KAA3C,KACArD,EAAAC,EAAAC,cAAA,YAAOgD,EAAaI,SACpBtD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACZgD,IAAOL,EAAaM,KAAKC,UAAUC,mBCDzCC,EAbQ,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,SAErB,OACI7D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,kCACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,wCACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAY,cAAcsD,EAASC,OACzC9D,EAAAC,EAAAC,cAAA,sBAAc2D,EAASE,gBAAvB,IAAyCF,EAASG,gBAClDhE,EAAAC,EAAAC,cAAA,KAAGK,UAAU,aAAagD,IAAOM,EAASI,UAAUR,UAAUS,OAAO,YCkBlEC,EAvBE,SAAAP,GAAc,IAAZC,EAAYD,EAAZC,SAGnB,OAEI7D,EAAAC,EAAAC,cAAA,OAAKK,UAAY,wBAEZsD,GAAYA,EAASZ,IAAI,SAAAmB,GAEtB,OACApE,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMb,GAAK,YAAcgD,EAAQhB,GAAID,IAAMiB,EAAQhB,IACnDpD,EAAAC,EAAAC,cAACmE,EAAD,CAAgBR,SAAYO,kCCFtCE,mLAIO,IAAAC,EAE+B5B,KAAK5C,MAAjC8D,EAFHU,EAEGV,SAAUW,EAFbD,EAEaC,cAEdC,EAAS,KAgBb,OAdIA,EADA9B,KAAK5C,MAAMgB,KAAKa,IAEZ5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAACwE,EAAD,CAAcb,SAAUA,KAE5B7D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACXP,EAAAC,EAAAC,cAACyE,EAAD,CAAe3B,qBAAwBwB,MAK1CxE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUxD,GAAG,YAItBpB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aAEVkE,UA3BO3B,aA2CT+B,cACXpE,YAVoB,SAACe,GACrB,MAAO,CACHqC,SAAUrC,EAAMsD,UAAUC,QAAQlB,SAClC9C,KAAMS,EAAMC,SAASV,KACrBiE,QAASxD,EAAMT,KAAKiE,QACpBR,cAAehD,EAAMsD,UAAUC,QAAQP,iBAM3CS,2BAAiB,CAAC,CAACC,WAAY,WAAWC,QAAQ,CAAC,YAAY,SAAS,CAACD,WAAW,gBAAiBE,MAAM,EAAGD,QAAQ,CAAC,OAAO,WAFnHN,CAGbP,GCpDae,UALC,kBACZrF,EAAAC,EAAAC,cAAA,OAAKK,UAAW,cAChBP,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,sBCM3EoF,qNACFC,qBAAuB,WACnBjD,EAAKvC,MAAMyF,SAASlD,EAAKvC,MAAM0F,MAAMC,OAAOtC,IAC5Cd,EAAKvC,MAAM4F,QAAQC,KAAK,8EAEpB,IACGC,EAAmBlD,KAAK5C,MAAxB8F,gBACP,IAAIlD,KAAK5C,MAAMgB,KAAKa,IAChB,OAAO5B,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUxD,GAAK,YAG1B,IAAI0E,EAAanD,KAAK5C,MAAMgG,MAAQ/F,EAAAC,EAAAC,cAAA,+BAA4BF,EAAAC,EAAAC,cAAC8F,EAAD,MAsBhE,OArBGH,IACCC,EAEI9F,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACdP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACRP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,SACjBP,EAAAC,EAAAC,cAAA,QAAMK,UAAY,kBAAkBF,QAAUsC,KAAK4C,sBAAnD,MAEHvF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,cACXsF,EAAgB/B,OAErB9D,EAAAC,EAAAC,cAAA,SAAI2F,EAAgBvC,UAExBtD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oCACXP,EAAAC,EAAAC,cAAA,wBAAgB2F,EAAgB9B,gBAAhC,IAAkD8B,EAAgB7B,gBAClEhE,EAAAC,EAAAC,cAAA,WAAMqD,IAAOsC,EAAgB5B,UAAUR,UAAUS,OAAO,YAOjElE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCACduF,UAnCgBhD,cA2Dd+B,cACXpE,YAnBoB,SAACe,EAAMyE,GAG3B,IAAM7C,EAAK6C,EAASR,MAAMC,OAAOtC,GAC3BS,EAAWrC,EAAMsD,UAAUoB,KAAKrC,SAEtC,MAAM,CACFgC,gBAFYhC,EAAWA,EAAST,GAAM,KAGtCrC,KAAMS,EAAMC,SAASV,KACrBiE,QAAQxD,EAAMT,KAAKiE,QACnBe,MAAMvE,EAAM4C,QAAQ+B,MAGD,SAACzF,GACxB,MAAM,CACF8E,SAAU,SAACpC,GAAD,OAAM1C,ECLK,SAAC0C,GAC1B,OAAO,SAAC1C,EAASE,EAAVC,GAAqC,IAAjBuF,EAAiBvF,EAAjBuF,aACvB1F,EAnBE,CACFQ,KAAK,yBAmBakF,IACRlB,WAAW,YAAYmB,IAAIjD,GAAIkD,SACxCrF,KAAK,SAACsF,GACH7F,EAnBwB,SAAC0C,GACjC,MAAM,CACFlC,KAAM,yBACNkC,GAAGA,GAgBUoD,CAAqBpD,MAC/BqD,MAAM,SAACN,GACNzF,EAfuB,SAACyF,GAChC,MAAM,CACFjF,KAAM,uBACNiF,IAAIA,GAYSO,CAAoBP,ODHRQ,CAAcvD,QAK3C6B,2BAAiB,CAAC,CAACC,WAAW,cAFnBL,CAGZS,WEhEGsB,6MACFpF,MAAQ,CACJqF,MAAO,GACPC,SAAU,MAEdC,aAAe,SAACC,GACZ1E,EAAKC,SAAL0E,OAAAC,EAAA,EAAAD,CAAA,GAEKD,EAAEG,OAAO/D,GAAK4D,EAAEG,OAAOC,WAGhCC,aAAe,SAACL,GACZA,EAAEM,iBACFhF,EAAKvC,MAAMwH,SAASjF,EAAKd,gFAGzB,IAAIgG,EAAY,KA8BhB,OA5BIA,EADD7E,KAAK5C,MAAMiF,QAENhF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,UACbP,EAAAC,EAAAC,cAAC8F,EAAD,OAMJhG,EAAAC,EAAAC,cAAA,QAAMuH,SAAU9E,KAAK0E,aAAc9G,UAAU,SACzCP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACVoC,KAAK5C,MAAM2H,QAAU1H,EAAAC,EAAAC,cAAA,SAAIyC,KAAK5C,MAAM2H,SAAe,MAExD1H,EAAAC,EAAAC,cAAA,MAAIK,UAAU,2BAAd,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,SAAf,SACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,QAAQkC,GAAG,QAAQwE,SAAUjF,KAAKoE,gBAElD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,YAAf,YACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,WAAWkC,GAAG,WAAWwE,SAAUjF,KAAKoE,gBAExD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,gCAAlB,WAMboC,KAAK5C,MAAMgB,KAAKa,IACR5B,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUxD,GAAG,MAGpBpB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACViH,UAnDI1E,aAqENrC,cAbS,SAACe,GACrB,MAAO,CACHkG,QAASlG,EAAMT,KAAK8G,UACpB9G,KAAMS,EAAMC,SAASV,KACrBiE,QAASxD,EAAMT,KAAKiE,UAGD,SAACtE,GACxB,MAAO,CACH6G,SAAU,SAACO,GAAkBpH,EZxDf,SAACoH,GACnB,OAAO,SAACpH,EAAUE,EAAXgD,GAAyC,IAAlB9C,EAAkB8C,EAAlB9C,YAC1BJ,EAjBE,CACFQ,KAAK,eAiBYJ,IAERC,OAAOgH,2BACZD,EAAYjB,MACZiB,EAAYhB,UACd7F,KAAK,WACHP,EAnBF,CACFQ,KAAK,oBAoBFuF,MAAM,SAAAN,GACLzF,EAlBc,SAACyF,GACvB,MAAM,CACFjF,KAAK,YACLiF,OAea6B,CAAW7B,OY4Cc8B,CAAOH,OAItCrH,CAA6CmG,GCtEtDsB,6MACF1G,MAAQ,CACJqF,MAAO,GACPC,SAAU,GACVqB,UAAW,GACXC,SAAU,MAEdrB,aAAe,SAACC,GACZ1E,EAAKC,SAAL0E,OAAAC,EAAA,EAAAD,CAAA,GAEKD,EAAEG,OAAO/D,GAAK4D,EAAEG,OAAOC,WAGhCC,aAAe,SAACL,GACZA,EAAEM,iBACFhF,EAAKvC,MAAMsI,SAAS/F,EAAKd,gFAKzB,IAAI8G,EAAW,KAgCf,OA9BIA,EADA3F,KAAK5C,MAAMiF,QACAhF,EAAAC,EAAAC,cAAC8F,EAAD,MAIPhG,EAAAC,EAAAC,cAAA,QAAMuH,SAAU9E,KAAK0E,aAAc9G,UAAU,SACxCoC,KAAK5C,MAAM8H,UAAY7H,EAAAC,EAAAC,cAAA,KAAGK,UAAU,SAASgI,MAAO,CAAEC,MAAO,QAAU7F,KAAK5C,MAAM8H,WAAiB,KACpG7H,EAAAC,EAAAC,cAAA,MAAIK,UAAU,2BAAd,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,SAAf,SACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,QAAQkC,GAAG,QAAQwE,SAAUjF,KAAKoE,gBAElD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,YAAf,YACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,WAAWkC,GAAG,WAAWwE,SAAUjF,KAAKoE,gBAExD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,aAAf,cACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OAAOkC,GAAG,YAAYwE,SAAUjF,KAAKoE,gBAErD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,YAAf,aACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OAAOkC,GAAG,WAAWwE,SAAUjF,KAAKoE,gBAEpD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,gCAAlB,aAMZoC,KAAK5C,MAAMgB,KAAKa,IACT5B,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUxD,GAAG,YAGpBpB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACd+H,UAzDQxF,aA2ENrC,cAbS,SAACe,GACrB,MAAO,CACHT,KAAMS,EAAMC,SAASV,KACrB8G,UAAWrG,EAAMT,KAAK8G,UACtB7C,QAASxD,EAAMT,KAAKiE,UAGD,SAACtE,GACxB,MAAO,CACH2H,SAAU,SAACI,GAAc/H,EbXX,SAAC+H,GACnB,OAAO,SAAC/H,EAAUE,EAAX8H,GAAoD,IAA9B5H,EAA8B4H,EAA9B5H,YAAasF,EAAiBsC,EAAjBtC,aACtC1F,EAjBE,CACFQ,KAAM,iBAiBN,IAAMO,EAAWX,IACXgE,EAAYsB,IAClB3E,EAASV,OAAO4H,+BACZF,EAAQ5B,MACR4B,EAAQ3B,UACV7F,KAAK,SAACsF,GAEJ,OADAqC,QAAQC,IAAItC,EAAIlD,MACTyB,EAAUI,WAAW,SAASmB,IAAIE,EAAIlD,KAAKzB,KAAKkH,IAAI,CACvDX,UAAWM,EAAQN,UACnBC,SAAUK,EAAQL,SAClB9G,SAASmH,EAAQN,UAAU,GAAKM,EAAQL,SAAS,OAGtDnH,KAAK,WACJP,EA3BF,CACFQ,KAAK,qBA2BFuF,MAAM,SAACN,GACNzF,EAzBe,SAACyF,GACxB,MAAM,CACFjF,KAAK,eACLiF,OAsBa4C,CAAY5C,OaRS6C,CAAOP,OAIlChI,CAA6CyH,GC1EtDe,6MACFzH,MAAQ,CACJsC,MAAO,GACPR,QAAS,MAGbyD,aAAe,SAACC,GACZ1E,EAAKC,SAAL0E,OAAAC,EAAA,EAAAD,CAAA,GAAiBD,EAAEG,OAAO/D,GAAK4D,EAAEG,OAAOC,WAE5CC,aAAe,SAACL,GACZA,EAAEM,iBAEFhF,EAAKvC,MAAMmJ,cAAc5G,EAAKd,OAC9Bc,EAAKvC,MAAM4F,QAAQC,KAAK,8EAGxB,IAAIuD,EAAiB,KAuBrB,OArBIA,EADDxG,KAAK5C,MAAMiF,QACQhF,EAAAC,EAAAC,cAAC8F,EAAD,MAIdhG,EAAAC,EAAAC,cAAA,QAAMuH,SAAU9E,KAAK0E,aAAc9G,UAAU,SACzCP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,2BAAd,uBACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,SAAf,SACA3H,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OAAOkC,GAAG,QAAQwE,SAAUjF,KAAKoE,gBAEjD/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,SAAOyH,QAAQ,WAAf,mBACA3H,EAAAC,EAAAC,cAAA,YAAUK,UAAU,uBAAuB6C,GAAG,UAAUwE,SAAUjF,KAAKoE,gBAE3E/G,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,gCAAlB,YAMXoC,KAAK5C,MAAMgB,KAAKa,IAIjB5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACd4I,GAJMnJ,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUxD,GAAG,mBAxCJ0B,aAgEbrC,cAdS,SAACe,GACrB,MAAO,CACHT,KAAMS,EAAMC,SAASV,KACrBiE,QAASxD,EAAM4C,QAAQY,UAIJ,SAACtE,GACxB,MAAO,CACHwI,cAAe,SAAC9E,GAAD,OAAa1D,EHhDP,SAAC0D,GAE1B,OAAO,SAAC1D,EAAUE,EAAXgD,GAAuDA,EAAhC9C,YAAgC,IAAnBsF,EAAmBxC,EAAnBwC,aACvC1F,EApBG,CACHQ,KAAM,yBAqBN,IAAMQ,EAAUd,IAAWa,SAASC,QAC9B0H,EAAWxI,IAAWa,SAASV,KAAKa,IAExBwE,IAERlB,WAAW,YAAYmE,IAAjCpC,OAAAqC,EAAA,EAAArC,CAAA,GACO7C,EADP,CAEIL,gBAAiBrC,EAAQyG,UACzBnE,eAAgBtC,EAAQ0G,SACxBgB,SAAUA,EACVnF,UAAW,IAAIsF,QAChBtI,KAAK,WACJP,EAxBwB,SAAC0D,GACjC,MAAM,CACFlD,KAAM,yBACNkD,WAqBaoF,CAAqBpF,MAC/BqC,MAAM,SAAAN,GACLzF,EAhCsB,SAACyF,GAC/B,MAAM,CACFjF,KAAM,uBACNiF,IAAKA,GA6BQsD,CAAmBtD,OG6BK+C,CAAc9E,OAK5C3D,CAA6CwI,s9BCtDvCS,mLAGnB,IAAMC,EAAeC,YAAHC,KAiChB,OACE7J,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACyJ,EAAD,MACI3J,EAAAC,EAAAC,cAAC4J,EAAD,MACJ9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,KACE/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,UAAa7F,IACpCtE,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAM,eAAeC,UAAY7E,IACxCtF,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAavD,IACnC5G,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAO,UAAUC,UAAajC,IACrClI,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAalB,aA7CpBnG,sBCNbsH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9E,MACvB,sEClBA+E,EAAe,CACjB3C,UAAW,KACX7C,SAAS,EACTyF,aAAc,KAuDHC,EApDM,WAAiC,IAAhClJ,EAAgCmJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBH,EAAcM,EAAUH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAOC,EAAO5J,MACX,IAAK,aACL,OAAA+F,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAS,IAEb,IAAK,gBAEL,OADA4D,QAAQC,IAAI,iBACL5B,OAAAqC,EAAA,EAAArC,CAAA,GACAzF,EADP,CAEIqG,UAAW,KACX7C,SAAS,IAEb,IAAK,YAEL,OADA4D,QAAQC,IAAI,gBACZ5B,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIqG,UAAWiD,EAAO3E,IAAI4E,QACtB/F,SAAS,IAEb,IAAK,kBAEL,OADA4D,QAAQC,IAAI,mBACZ5B,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,IAEZ,IAAK,eACL,OAAAiC,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,IAEZ,IAAK,iBAEL,OADA4D,QAAQC,IAAI,kBACZ5B,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIqG,UAAU,KACV7C,SAAS,IAEb,IAAK,eAEL,OADA4D,QAAQC,IAAI,gBACZ5B,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIqG,UAAWiD,EAAO3E,IAAI4E,QACtB/F,SAAS,IAEb,QACA,OAAOxD,ICrDTgJ,EAAe,CAClBxF,SAAS,EACT5B,GAAG,KACH+C,IAAI,MA4CQ6E,GAzCS,WAAiC,IAAhCxJ,EAAgCmJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBH,EAAcM,EAAUH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOC,EAAO5J,MAEV,IAAK,uBACD,OAAO+F,OAAAqC,EAAA,EAAArC,CAAA,GACAzF,EADP,CAEIwD,SAAQ,IAEhB,IAAK,uBAKL,IAAK,yBACL,OAAAiC,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,IAEZ,IAAK,uBACL,OAAAiC,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,IAEZ,IAAK,yBACL,OAAAiC,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,EACR5B,GAAG0H,EAAO1H,KAEd,IAAK,uBACL,OAAA6D,OAAAqC,EAAA,EAAArC,CAAA,GACOzF,EADP,CAEIwD,SAAQ,EACRmB,IAAI2E,EAAO3E,MAEf,QACA,OAAO3E,0DC7BbC,KAASwJ,cARG,CACVC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,iBAGrB9J,KAASqD,YAAY0G,SAAS,IAKf/J,UAAf,ECIIgK,GAAmBpB,OAAOqB,sCAAwC7G,IAElE8G,GAAcC,YAAgB,CAChC7K,KAAM2J,EACNtG,QAAS4G,GACTlG,UAAW+G,oBACXpK,SAAUqK,oBAIRC,GAAQC,YAAYL,GACtBF,GAAiBQ,YAAgBC,KAAMC,kBAAkB,CACrDrL,0BAAYsF,gCAEhBgG,0BAAeC,IACfC,6BAAmBD,GAAS,CAACE,mBAAkB,EAAMC,wBAAuB,EAAMC,YAAY,YAI5FC,GACF1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACI3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAUb,MAASA,IACf/L,EAAAC,EAAAC,cAAC2M,EAAD,QAKZd,GAAMe,oBAAoB7L,KAAK,WAC3B8L,IAASC,OAAON,GAAKO,SAASC,eAAe,WJ8E3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpM,KAAK,SAAAqM,GACjCA,EAAaC","file":"static/js/main.91868926.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Backdrop.scss'\r\n\r\nconst backdrop = (props) =>{\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {props.show ? <div onClick ={props.clicked} className = \"Backdrop\"></div>: null }\r\n        </React.Fragment>\r\n        \r\n        \r\n    )\r\n}\r\nexport default backdrop","import React from 'react'\r\nimport './HamburgerBtn.scss'\r\n\r\nconst hamburgerBtn = (props) =>{\r\n\r\n    return(\r\n        <button className = \"toggle-button\" onClick = {props.clicked}>\r\n            <div className = \"toggle-button__line\"></div>\r\n            <div className = \"toggle-button__line\"></div>\r\n            <div className = \"toggle-button__line\"></div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default hamburgerBtn","import React from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n//import Spinner from '../spinner/Spinner'\r\n\r\nconst SignInLink = (props) => {\r\n \r\n    \r\n    return (\r\n        \r\n        <ul className=\"center\">\r\n            <li><NavLink to=\"/create-project\">New Project</NavLink></li>\r\n            <li><NavLink to=\"/\" onClick={props.onLogOut}> Log Out</NavLink></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating blue lighten-1\">{props.profileProp.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogOut: () => { dispatch(signOut()) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLink)","\r\nexport const authStart = () =>{\r\n    return{\r\n        type:\"AUTH_START\"\r\n    }\r\n}\r\nexport const loginSuccess = () =>{\r\n    return{\r\n        type:\"LOGIN_SUCCESS\"\r\n    }\r\n}\r\nexport const loginError = (err) =>{\r\n    return{\r\n        type:'LOGIN_ERR',\r\n        err\r\n    }\r\n}\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        dispatch(authStart())\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch(loginSuccess())\r\n\r\n        }).catch(err => {\r\n            dispatch(loginError(err))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const singOutSuccess = () =>{\r\n    return {\r\n        type: \"SIGNOUT_SUCCESS\"\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch(singOutSuccess())\r\n            })\r\n    }\r\n}\r\n\r\nexport const signUpStart = () =>{\r\n    return{\r\n        type: \"SIGNUP_START\"\r\n    }\r\n}\r\nexport const signUpSuccess = () =>{\r\n    return{\r\n        type:\"SIGNUP_SUCCESS\"\r\n    }\r\n}\r\nexport const signUpError = (err) =>{\r\n    return{\r\n        type:\"SIGNUP_ERROR\",\r\n        err\r\n    }\r\n}\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        dispatch(signUpStart())\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            console.log(res.user)\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0],\r\n\r\n            })\r\n        }).then(() =>{\r\n            dispatch(signUpSuccess())\r\n        }).catch((err)=>{\r\n            dispatch(signUpError(err))\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignOutLink = ()=>{\r\n\r\n    return(\r\n        <ul className = \"center\">\r\n            <li><NavLink to =\"/signin\">LogIn</NavLink></li>\r\n            <li><NavLink to =\"/signup\">SignUp</NavLink></li>\r\n            \r\n        </ul>\r\n    ) \r\n}\r\n\r\nexport default SignOutLink","import React from 'react'\r\n\r\nimport HamburgerBtn from '../SideDrawer/HamburgerBtn'\r\nimport './Toolbar.scss'\r\nimport {connect} from 'react-redux'\r\nimport SignInLink from '../layout/SingInLink'\r\nimport SignOutLink from '../layout/SignOutLink'\r\nimport {Link} from 'react-router-dom'\r\nconst toolbar = (props) => {\r\n    const {profile} = props\r\n    let links = null\r\n    if(props.auth.uid){\r\n        links = (\r\n            <SignInLink profileProp = {profile}/>\r\n        )\r\n        \r\n    }else{\r\n        links = <SignOutLink/>\r\n    }\r\n    return (\r\n        <header className=\"toolbar\">\r\n            <nav className=\"toolbar__navigation\">\r\n                <div className = \"toolbar__toggle-button\">\r\n                    <HamburgerBtn clicked={props.hamburgerClicked} />\r\n                </div>\r\n                <div className=\"toolbar__logo\"><Link to = '/'>Post Managment</Link></div>\r\n                <div className=\"space\"></div>\r\n                <div className=\"toolbar__navigation-items\">\r\n                   \r\n                        {links}\r\n                    \r\n                </div>\r\n            </nav>\r\n        </header>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        //this is initial firebase prop\r\n        auth:state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(toolbar)","import React from 'react'\r\n\r\nimport './SideDrawer.scss'\r\nimport { connect } from 'react-redux'\r\nimport SignInLink from '../layout/SingInLink'\r\nimport SignOutLink from '../layout/SignOutLink'\r\n\r\nconst sideDrawer = (props) => {\r\n    let sideDrawerClasses = 'side-drawer'\r\n    if (props.show) {\r\n        sideDrawerClasses = 'side-drawer open'\r\n    }\r\n    const {profile} = props\r\n    let links = null\r\n    if(props.auth.uid){\r\n        links = (\r\n            <SignInLink profileProp = {profile}/>\r\n        )\r\n        \r\n    }else{\r\n        links = <SignOutLink/>\r\n    }\r\n    return (\r\n        <div className={sideDrawerClasses}>\r\n        \r\n            {links}\r\n         \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(sideDrawer) ","import React,{Component} from 'react'\r\n\r\n\r\n\r\n\r\n\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport {connect} from 'react-redux'\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nclass Navbar extends Component {\r\n    state = {\r\n        sideDrawerOpen: false,\r\n      }\r\n      hamburgerClickHandler = () => {\r\n        this.setState((prevState) => {\r\n          return {\r\n            sideDrawerOpen: !prevState.sideDrawerOpen\r\n          }\r\n        })\r\n      }\r\n      backdropClickHandler = () => {\r\n        this.setState({ sideDrawerOpen: false })\r\n      }\r\n    render(){\r\n       // const {profile,auth} = this.props\r\n    \r\n        return(\r\n            <nav className = \"nav-wrapper teal\">\r\n            <div className = \"container\">\r\n                \r\n                <Toolbar hamburgerClicked = {this.hamburgerClickHandler}/>\r\n                <SideDrawer show ={this.state.sideDrawerOpen} />\r\n                <Backdrop show ={this.state.sideDrawerOpen} clicked={this.backdropClickHandler} />\r\n                \r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\n//<Link to=\"/\" className=\"brand-logo\">Post Managment</Link>\r\n    \r\n\r\n   // let links = null\r\n  //  if(props.auth.uid){\r\n     //   links = (\r\n      //      <SignInLink profileProp = {profile}/>\r\n      //  )\r\n        \r\n //   }else{\r\n //       links = <SignOutLink/>\r\n   // }\r\n    \r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        //this is initial firebase prop\r\n        auth:state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) => {\r\n  const { projectNotifications } = props\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {projectNotifications && projectNotifications.map(notification => {\r\n              return (\r\n                <li key={notification.id}>\r\n                  <span className=\"green-text\">{notification.user} </span>\r\n                  <span>{notification.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(notification.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({projects})=>{\r\n\r\n    return(\r\n        <div className = \"card z-depth-0 project-summary\">\r\n            <div className = \"card-content grey-text text-darken-3\">\r\n                <span className = \"card-title\">{projects.title}</span>\r\n                <p>Posted by {projects.authorFirstName} {projects.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(projects.createdAt.toDate()).format('LLLL')}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectLists = ({projects})=>{\r\n    \r\n    //{project && we check if are projects if there wont be then the second part wont execute\r\n    return(\r\n\r\n        <div className = \"project-list section\">\r\n        \r\n            {projects && projects.map(project=>{\r\n                //project = {project} we passing as a props to ProjectSUmmary component because we want to execute props already have\r\n                return(\r\n                <Link to ={'/project/' + project.id} key ={project.id} >\r\n                <ProjectSummary projects = {project} />\r\n                </Link>\r\n\r\n                )\r\n                \r\n                \r\n            })}\r\n        </div>\r\n         \r\n        )\r\n    }\r\n    \r\n    export default ProjectLists\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    ","import React, { Component } from 'react'\r\n\r\nimport Notifications from './Notifications'\r\nimport ProjectLists from '../projects/ProjectLists'\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n//import Spinner from '../spinner/Spinner'\r\n\r\nclass Dashboard extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        //this past props to ProjectList component\r\n        const { projects, notifications } = this.props;\r\n\r\n        let permit = null\r\n        if (this.props.auth.uid) {\r\n            permit = (\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectLists projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m3 offset-1\">\r\n                        <Notifications projectNotifications = {notifications}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            permit = <Redirect to=\"/signin\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                {permit}\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        loading: state.auth.loading,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{collection: 'projects',orderBy:['createdAt','desc']},{collection:'notifications', limit:3, orderBy:['time','desc']}])\r\n)(Dashboard)\r\n\r\n","import React from 'react'\r\nimport './Spinner.css'\r\nconst spinner = () =>(\r\n    <div className =\"lds-roller\">\r\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n    </div>\r\n)\r\nexport default spinner","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Spinner  from '../spinner/Spinner'\r\nimport moment from 'moment'\r\nimport {deleteProject} from '../../store/actions/projectActions'\r\n\r\nimport './pDetails.css'\r\nclass ProjectDetails extends Component{\r\n    deleteProjectHandler = () =>{\r\n        this.props.onDelete(this.props.match.params.id)\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        const {projectProperty} = this.props\r\n        if(!this.props.auth.uid){\r\n            return <Redirect to = \"/signin\"/>\r\n        }\r\n\r\n        let proDetails = this.props.error ? <p>Something go wrong</p> : <Spinner/>\r\n        if(projectProperty){\r\n            proDetails = (\r\n                \r\n                <div className=\"card z-depth-0\">\r\n                 <div className=\"card-content\" >\r\n                        <div className = \"right\">\r\n                        <span className = \"p__details-span\" onClick ={this.deleteProjectHandler}>X</span>\r\n                        </div>\r\n                     <span className=\"card-title\">\r\n                         {projectProperty.title}\r\n                     </span>\r\n                     <p>{projectProperty.content}</p>\r\n                 </div>\r\n                 <div className=\"card-action  lighten-4 grey-text\">\r\n                     <div>Posted by {projectProperty.authorFirstName} {projectProperty.authorLastName}</div>\r\n                     <div>{moment(projectProperty.createdAt.toDate()).format('LLLL')}</div>\r\n                 </div>\r\n             </div>\r\n            \r\n            )     \r\n        }\r\n        return(\r\n            <div className=\"container section project-details\">\r\n            {proDetails}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n\r\n    \r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        projectProperty: project,\r\n        auth: state.firebase.auth,\r\n        loading:state.auth.loading,\r\n        error:state.project.err\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        onDelete: (id)=>dispatch(deleteProject(id))\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([{collection:'projects'}])\r\n) (ProjectDetails)","\r\nexport const creatProjectStart = () => {\r\n    return {\r\n        type: 'CREATE_PROJECT_START'\r\n    }\r\n}\r\nexport const createProjectError = (err) => {\r\n    return{\r\n        type: \"CREATE_PROJECT_ERROR\",\r\n        err: err\r\n    }\r\n}\r\nexport const createProjectSuccess = (project) =>{\r\n    return{\r\n        type: \"CREATE_PROJECT_SUCCESS\",\r\n        project\r\n    }\r\n}\r\n\r\nexport const createProject = (project) => {\r\n    //getFirebase,getFirestore imported from index.js file\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        dispatch(creatProjectStart())\r\n        //make async call to database\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        //we getting access to firestore in firebase page\r\n        const firestore = getFirestore()\r\n        //we getting 2 props title & content from createProject file\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch(createProjectSuccess(project))\r\n        }).catch(err => {\r\n            dispatch(createProjectError(err))\r\n        })\r\n\r\n    }\r\n}\r\nexport const deleteProjectStart = () =>{\r\n    return{\r\n        type:\"DELETE_PROJECT_START\"\r\n    }\r\n}\r\nexport const deleteProjectSuccess = (id) =>{\r\n    return{\r\n        type: \"DELETE_PROJECT_SUCCESS\",\r\n        id:id\r\n    }\r\n}\r\nexport const deleteProjectFailed = (err) =>{\r\n    return{\r\n        type: \"DELTE_PROJECT_FAILED\",\r\n        err:err\r\n    }\r\n}\r\n\r\nexport const deleteProject = (id) =>{\r\n    return (dispatch,getState,{getFirestore}) =>{\r\n        dispatch(deleteProjectStart())\r\n        const firestore = getFirestore()\r\n        firestore.collection('projects').doc(id).delete()\r\n        .then((res)=>{\r\n            dispatch(deleteProjectSuccess(id))\r\n        }).catch((err)=>{\r\n            dispatch(deleteProjectFailed(err))\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            //id password or email\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSignIn(this.state)\r\n    }\r\n    render() {  \r\n        let LogInForm = null\r\n        if(this.props.loading){\r\n            LogInForm = (\r\n                <div className = \"center\">\r\n                    <Spinner/>\r\n                </div>\r\n            )\r\n        }else{\r\n            LogInForm = (\r\n\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <div className=\"red-text center\">\r\n                        {this.props.authErr ? <p>{this.props.authErr}</p> : null}\r\n                    </div>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Login</button>\r\n\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n        if(this.props.auth.uid){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {LogInForm}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authErr: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        loading: state.auth.loading\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSignIn: (credentials) => { dispatch(signIn(credentials)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport Spinner from '../spinner/Spinner'\r\n//Add Spinner\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            //id password or email\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSignUp(this.state)\r\n    }\r\n\r\n\r\n    render() {\r\n        let signedUp = null\r\n        if (this.props.loading) {\r\n            signedUp = <Spinner />\r\n        } else {\r\n            signedUp = (\r\n\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    {this.props.authError ? <p className=\"center\" style={{ color: 'red' }}>{this.props.authError}</p> : null}\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n\r\n        if (this.props.auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n            {signedUp}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        loading: state.auth.loading\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSignUp: (newUser) => { dispatch(signUp(newUser)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\n//import styled from 'styled-components'\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }   \r\n    render() {\r\n        let createdProject = null\r\n        if(this.props.loading){\r\n            createdProject =  <Spinner/>\r\n            \r\n        }else{\r\n            createdProject = (\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n        //Guarding Routes\r\n        if (!this.props.auth.uid) {\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n            {createdProject}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        loading: state.project.loading,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React, { Component } from 'react';\n\nimport {Route,Switch} from 'react-router-dom'\n\n//Styling imports\nimport {createGlobalStyle} from 'styled-components';\n//Components imports\nimport Navbar from '../components/layout/Navbar'\nimport Dashboard from '../components/dashboard/Dashboard';\nimport ProjectDetails from '../components/projects/ProjectDetails'\nimport SignIn from '../components/auth/SignIn';\nimport SignUp from '../components/auth/SignUp';\nimport CreateProject from '../components/projects/CreateProjects';\n\n\n\n//28\n\nexport default class App extends Component {\n  \n  render() {\n  const GlobalStyles = createGlobalStyle`\n    body{\n      padding:0;\n      margin:0;\n      background: #b2dfdb;\n    }\n    *{\n      box-sizing:border-box;\n    }\n    form{\n      padding:20px;\n      margin-top:60px;\n    }\n    form button, form h5{\n      margin:20px 0;\n    }\n    input[type=text]:not(.browser-default):focus:not([readonly]),\n    input[type=email]:not(.browser-default):focus:not([readonly]),\n    input[type=password]:not(.browser-default):focus:not([readonly]),\n    textarea.materialize-textarea:focus:not([readonly]){\n    border-color: #ec407a;\n    box-shadow: none;\n    }\n    input[type=text]:not(.browser-default):focus:not([readonly]) + label,\n    textarea.materialize-textarea:focus:not([readonly]) + label,\n    input[type=email]:not(.browser-default):focus:not([readonly]) + label,\n    input[type=password]:not(.browser-default):focus:not([readonly]) + label{\n    color: #ec407a !important;\n}\n\n\n  `\n\n    return (\n      <React.Fragment>\n        <GlobalStyles/>\n            <Navbar/>\n        <Switch>\n          <Route exact path =\"/\" component = {Dashboard}/>\n          <Route path =\"/project/:id\" component= {ProjectDetails}/>\n          <Route path=\"/signin\" component = {SignIn}/>\n          <Route path = \"/signup\" component = {SignUp}/>\n          <Route path=\"/create-project\" component = {CreateProject}/>\n        </Switch>\n         \n      </React.Fragment>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    authError: null,\r\n    loading: false,\r\n    authRedirect: '/'\r\n}\r\n\r\n const authReducer = (state = initialState, action) =>{\r\n     switch(action.type){\r\n        case 'AUTH_START':\r\n        return{\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case 'LOGIN_SUCCESS':\r\n        console.log('Login success')\r\n        return {\r\n            ...state,\r\n            authError: null,\r\n            loading: false\r\n        }\r\n        case 'LOGIN_ERR':\r\n        console.log('Login failed')\r\n        return{\r\n            ...state,\r\n            authError: action.err.message,\r\n            loading: false\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n        console.log('SignOut success')\r\n        return{\r\n            ...state,\r\n            loading:false\r\n        }\r\n        case \"SIGNUP_START\":\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n        case \"SIGNUP_SUCCESS\":\r\n        console.log('signup_success')\r\n        return{\r\n            ...state,\r\n            authError:null,\r\n            loading: false\r\n        }\r\n        case \"SIGNUP_ERROR\":\r\n        console.log('sugnup -err ')\r\n        return{\r\n            ...state,\r\n            authError: action.err.message,\r\n            loading: false\r\n        }\r\n        default:\r\n        return state\r\n     }\r\n   \r\n}\r\n\r\nexport default authReducer\r\n","const initialState = {\r\n   loading: false,\r\n   id:null, \r\n   err:null\r\n}\r\n\r\n const projectReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n\r\n        case \"CREATE_PROJECT_START\":\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false\r\n            }\r\n        case \"CREATE_PROJECT_SUCCESS\":\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n        }\r\n        case \"DELETE_PROJECT_START\":\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n        case \"DELETE_PROJECT_SUCCESS\":\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            id:action.id\r\n        }\r\n        case \"DELTE_PROJECT_FAILED\":\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            err:action.err\r\n        }\r\n        default: \r\n        return state\r\n    }\r\n   \r\n}\r\n\r\nexport default projectReducer\r\n"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n \r\n // Initialize Firebase\r\n let config = {\r\n    apiKey: \"AIzaSyBZuZxcvVOojIhtTIlSFrLTXOlLaH4lsoA\",\r\n    authDomain: \"post-managment-project.firebaseapp.com\",\r\n    databaseURL: \"https://post-managment-project.firebaseio.com\",\r\n    projectId: \"post-managment-project\",\r\n    storageBucket: \"post-managment-project.appspot.com\",\r\n    messagingSenderId: \"618921373245\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({\r\n    //timestampsInSnapshots:true\r\n  })\r\n  \r\n  \r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n//Reducers\nimport authReducer from './store/reducers/authReducer'\nimport projectReducer from './store/reducers/projectReducer'\n\n//Redux \nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\n//Firebase\nimport  { getFirestore,reduxFirestore,} from 'redux-firestore'\nimport {getFirebase, reactReduxFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/firebaseConfig'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//firestore reducer is resposible for syncing our data in our component with also use firestoreConenct to connect  sigle collection in Dashborad.js which is synced to property in index.js > firestore\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\n\nconst store = createStore(rootReducer,\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n        getFirebase,getFirestore\n    })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig,{attachAuthIsReady:true, useFirestoreForProfile:true, userProfile:'users'})\n    )    \n)\n\nconst app = (\n    <BrowserRouter>\n        <Provider store = {store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n)\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(app, document.getElementById('root'));\n})\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}